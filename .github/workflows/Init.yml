name: Init

on: 
 workflow_call:
   inputs:
     packages:
       required: true
       type: string

jobs:
  init:
    runs-on: windows-latest

    outputs:
      deploy_pkg1: ${{ steps.get-packages.outputs.deploy_pkg1 }}
      deploy_pkg2: ${{ steps.get-packages.outputs.deploy_pkg2 }}
      deploy_pkg3: ${{ steps.get-packages.outputs.deploy_pkg3 }}
      deploy_pkg4: ${{ steps.get-packages.outputs.deploy_pkg4 }}
      deploy_pkg5: ${{ steps.get-packages.outputs.deploy_pkg5 }}
      version_pkg1: ${{ steps.get-packages.outputs.version_pkg1 }}
      version_pkg2: ${{ steps.get-packages.outputs.version_pkg2 }}
      version_pkg3: ${{ steps.get-packages.outputs.version_pkg3 }}
      version_pkg4: ${{ steps.get-packages.outputs.version_pkg4 }}
      version_pkg5: ${{ steps.get-packages.outputs.version_pkg5 }}
      
    steps:
      - name: Get config file
        shell: pwsh
        run: |
          Write-Host "Retrieving config file ..."

      - name: Get pacakges to deploy
        id: get-packages
        shell: pwsh
        run: |
          $inputString = '${{ inputs.packages }}'
          $packageMap = @{}

          foreach ($pair in $inputString -split ',') {
            $trimmed = $pair.Trim()
            if ($trimmed -match '=') {
              $name, $version = $trimmed -split '=', 2
              $packageMap[$name] = $version
            }
          }

          $deploy_pkg1 = $packageMap.ContainsKey('pkg1')
          $deploy_pkg2 = $packageMap.ContainsKey('pkg2')
          $deploy_pkg3 = $packageMap.ContainsKey('pkg3')
          $deploy_pkg4 = $packageMap.ContainsKey('pkg4')
          $deploy_pkg5 = $packageMap.ContainsKey('pkg5')

          $pkg1_version = $packageMap['pkg1']
          $pkg2_version = $packageMap['pkg2']
          $pkg3_version = $packageMap['pkg3']
          $pkg4_version = $packageMap['pkg4']
          $pkg5_version = $packageMap['pkg5']

          Write-Output "deploy_pkg1=$deploy_pkg1" >> $env:GITHUB_OUTPUT
          Write-Output "deploy_pkg2=$deploy_pkg2" >> $env:GITHUB_OUTPUT
          Write-Output "deploy_pkg3=$deploy_pkg3" >> $env:GITHUB_OUTPUT
          Write-Output "deploy_pkg4=$deploy_pkg4" >> $env:GITHUB_OUTPUT
          Write-Output "deploy_pkg5=$deploy_pkg5" >> $env:GITHUB_OUTPUT

          Write-Output "version_pkg1=$pkg1_version" >> $env:GITHUB_OUTPUT
          Write-Output "version_pkg2=$pkg2_version" >> $env:GITHUB_OUTPUT
          Write-Output "version_pkg3=$pkg3_version" >> $env:GITHUB_OUTPUT
          Write-Output "version_pkg4=$pkg4_version" >> $env:GITHUB_OUTPUT
          Write-Output "version_pkg5=$pkg5_version" >> $env:GITHUB_OUTPUT

      
        
